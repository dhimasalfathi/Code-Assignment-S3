<?php
/**
    Generated by PHPistols 
    The PHP code generator https://www.phpistols.com
*/ 
ini_set('display_errors','On');
error_reporting(E_ALL^E_WARNING^E_NOTICE);

define('ITEMS_PER_PAGE', 15);
define('THIS_DIR', rtrim(dirname(__FILE__), '/\\'));

// DB parameters
$host = 'localhost';
$user = 'root';
$psw = '';
$dbName = 'test';
try{
    $db = new PDO('mysql:host='.$host.'; dbname='.$dbName, $user, $psw);
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
}
catch(Exception $e){
    echo 'Please check database connection credentials in controller.php ';
    exit();
}

require_once(THIS_DIR.'/modelUsers.php');
require_once(THIS_DIR.'/viewUsers.php');

$HTMLUsers = new ViewUsers();
$dataUsers = new ModelUsers($db); 



$HTMLUsers->header();

$page = $_GET['page'];
if($page == 0) $page=1;


$dataUsers->userId = intval($_POST['userId']);
$dataUsers->name = strip_tags($_POST['name']);
$dataUsers->email = strip_tags($_POST['email']);


$fieldsNames= array('userId','name','email');

$orderBy='';
/*
if(in_array($_GET['orderBy'], $fieldsNames)){
	$orderBy = $_GET['orderBy'];
}
*/
// Get index of the field 
$orderBy = array_search($_GET['orderBy'], $fieldsNames)+1;

$order='ASC';
if($_GET['order']){
	$order =  strtoupper($_GET['order']);
}

$task = addslashes($_GET['task']);
if($task == 'edit' && $_POST){
	$dataUsers->userId = intval($_POST['userId']);
}
elseif($_GET['userId'] != null){
	$dataUsers->userId = intval($_GET['userId']);
}

$HTMLUsers->menu();

switch ($task) {


	//-----------------------------------------------------------------------------------------
	// Edit or add
	//-----------------------------------------------------------------------------------------
	case 'edit':
		// get calendar date for this training
		// Get training infos
		if($_POST){
		    try{
			    $dataUsers->save();
			    $message['type'] = 'success';
			    $message['text'] = 'The entry has been saved';
			}
			catch(Exception $e){
			    $message['type'] = 'danger';
                if($e->errorInfo[0] ==23000){
                    $message['text'] = 'Duplicate element';
                }
                else{
                    $message['text'] = 'Error saving data';
                }
			}
		}

        try{
            if($dataUsers->userId){
		        $dataUsers->get();
		    }
		}
		
        catch(Exception $e){
            $message['type'] = 'danger';
            $message['text'] = 'Error retrieving data';
        }		
		
		$HTMLUsers->form($dataUsers , $message);

		break;



	//-----------------------------------------------------------------------------------------
	// Delete
	//-----------------------------------------------------------------------------------------
	case 'del':
		if($dataUsers->userId){
			try{
			    $dataUsers->del();
				$message['type'] = 'success';
				$message['text'] = 'Done';
			}
			catch(Exception $e){
			    $message['type'] = 'danger';
                $message['text'] = 'Error deleting data';
                
			}
		}
		else{
            $message['type'] = 'danger';
            $message['text'] = 'Missing parameter';
		}
        // Continue to list
        
	//-----------------------------------------------------------------------------------------
	// List
	//-----------------------------------------------------------------------------------------
	case 'edit-list':
		// Display items list for edition

        try{
		    $nbItems = $dataUsers->getList(($page * ITEMS_PER_PAGE)-ITEMS_PER_PAGE , ITEMS_PER_PAGE, $orderBy, $order );
		}
        catch(Exception $e){
            $message['type'] = 'danger';
            $message['text'] = 'Error retrieving data';
        }
        
        $revertOrder = 'ASC';
		if($order == 'ASC'){
		    $revertOrder = 'DESC';
        }
		$HTMLUsers->editList($dataUsers->list, '?option=users&task=edit-list&', $fieldsNames[$orderBy-1], $revertOrder, $message);

		$nbPages = ceil($nbItems/ITEMS_PER_PAGE);
		$HTMLUsers->pagination($nbPages, $page, "?option=users&task=edit-list&");
		break;
    
    
	//-----------------------------------------------------------------------------------------
	// Display details
	//-----------------------------------------------------------------------------------------
	case 'view':
		// Display selected trainings
		try{
		    $dataUsers->get();
		}
        catch(Exception $e){
            $message['type'] = 'danger';
            $message['text'] = 'Error retrieving data';
        }
		$HTMLUsers->displayDetails($dataUsers, $message);
		break;    

	//-----------------------------------------------------------------------------------------
	// Display List
	//-----------------------------------------------------------------------------------------
	default:
		// Display items list 
        try{
		    $nbItems = $dataUsers->getList(($page * ITEMS_PER_PAGE)-ITEMS_PER_PAGE , ITEMS_PER_PAGE, $orderBy, $order );
		}
        catch(Exception $e){
            $message['type'] = 'danger';
            $message['text'] = 'Error retrieving data';
        }
        
        $revertOrder = 'ASC';
		if($order == 'ASC'){
		    $revertOrder = 'DESC';
        }
		$HTMLUsers->displayList($dataUsers->list, '?option=users&', $fieldsNames[$orderBy-1], $revertOrder, $message);

		$nbPages = ceil($nbItems/ITEMS_PER_PAGE);
		$HTMLUsers->pagination($nbPages, $page, "?option=users&");
		break;
    }

$HTMLUsers->footer();
