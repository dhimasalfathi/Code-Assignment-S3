<?php
/**
    Generated by PHPistols 
    The PHP code generator https://www.phpistols.com
*/
/**
*	Manage elements of the the table users.
*/
class ModelUsers{

    var $dbConnexion;
    var $users;
    var $list;
    var $userId;
    var $name;
    var $email;


    /**
    * Constructor
    * @param $dbConnexion PDO db connexion
    */
    public function __construct($dbConnexion){
        $this->users = '`users`';
        $this->dbConnexion = $dbConnexion;
    }


    /**
    * Add a row in users.
    * @return int 0 or 1
    */
    function add(){

        $query = "  INSERT INTO $this->users  ( name, email)
                    VALUES (
                    :name,
                    :email
                    )";



            $q = $this->dbConnexion->prepare($query);
        if($q->execute(array(':name' => $this->name, ':email' => $this->email,))){
            $this->userId = $this->dbConnexion->lastInsertId();
            return(1);
        }
        else{
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }


    /**
    * Update a row in users.
    * @return int 0 or 1
    */
    function save(){

        // the element exists
        if($this->userId > 0){
            $query = "  UPDATE $this->users SET
                    `name` = :name,
                    `email` = :email
            WHERE userId = :userId ";


                $q = $this->dbConnexion->prepare($query);
            if($q->execute(array(':userId' => $this->userId, ':name' => $this->name, ':email' => $this->email))){
                return (1);
            }
            else{
                //var_dump($q->errorInfo());
                //$q->debugDumpParams();
                return(0);
            }
        }
        // the element don't exists
        else{
            return($this->add());
        }


    }


    /**
    * Delete a row in users.
    * @param Int id_user
    * @return int 0 or 1
    */
    function del(){

        $query = "DELETE FROM $this->users WHERE `userId` = :userId";


        $q = $this->dbConnexion->prepare($query);

        if($q->execute(array(':userId' => $this->userId ))){
            return (1);
        }
        else{
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }


    /**
    * Get a row in users.
    * @param Int id_user
    * @return int 0 or 1
    */
    function get(){

        $query = "  SELECT u.`userId`, u.`name`, u.`email`
                    FROM $this->users AS u 
                    WHERE u.userId = :userId";


        $q = $this->dbConnexion->prepare($query);
        if($q->execute(array(':userId' => $this->userId))){
            if($row = $q->fetch(PDO::FETCH_ASSOC)){
                $this->userId = $row['userId'];
                $this->name = $row['name'];
                $this->email = $row['email'];

                return(1);
            }
            else{
                return(0);
            }
        }
        else{
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }


    /**
    * Get a list of row in users.
    * @param Int limitFrom
    * @param Int limitNumber
    * @param char orderBy
    * @param Int order
    * @return int 0 or Number of elements
    */
    function getList($limitFrom, $limitNumber, $orderBy='', $order='ASC'){

        $query = "  SELECT u.`userId`, u.`name`, u.`email`
                    FROM $this->users AS u ";

        if($order != 'ASC') $order = 'DESC';
        if($orderBy){
            $query .= "ORDER BY :orderBy $order ";
        }

        if($limitNumber){
            $query .= "LIMIT :limitFrom, :limitNumber ";
        }


        $q = $this->dbConnexion->prepare($query);

        if($limitNumber){
            $q->bindValue(':limitFrom', intval($limitFrom), PDO::PARAM_INT);
            $q->bindValue(':limitNumber', intval($limitNumber), PDO::PARAM_INT);
        }

        if($orderBy){
            $q->bindValue(':orderBy', intval($orderBy), PDO::PARAM_INT);
        }

        if($q->execute()){
            $this->list = array();
            $i=0;
            while($row = $q->fetch(PDO::FETCH_ASSOC)){
               $this->list[$i]['userId'] = $row['userId'];
               $this->list[$i]['name'] = $row['name'];
               $this->list[$i]['email'] = $row['email'];
            $i++;
            }
            return($this->count());
        }
       else{
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }


    /**
    * Count row in users    * @return int 0 or Number of elements
    */
    function count(){

        $query = "SELECT COUNT(*) AS nbRows
        FROM $this->users";

        $q = $this->dbConnexion->prepare($query);

        if($q->execute()){
            if($row = $q->fetch(PDO::FETCH_ASSOC)){
                return($row['nbRows']);
            }
        }
        else{
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }
}
    